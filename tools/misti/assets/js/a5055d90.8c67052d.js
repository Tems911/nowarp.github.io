"use strict";(self.webpackChunknowarp_github_io=self.webpackChunknowarp_github_io||[]).push([[484],{535:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=n(4848),s=n(8453);const a={},l="Design Overview",o={id:"hacking/design",title:"Design Overview",description:"Static Analysis",source:"@site/docs/hacking/design.md",sourceDirName:"hacking",slug:"/hacking/design",permalink:"/tools/misti/docs/hacking/design",draft:!1,unlisted:!1,editUrl:"https://github.com/nowarp/nowarp.github.io/tree/master/docs/hacking/design.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Contributing",permalink:"/tools/misti/docs/hacking/contributing"},next:{title:"Souffl\xe9",permalink:"/tools/misti/docs/hacking/souffle"}},r={},c=[{value:"Static Analysis",id:"static-analysis",level:2},{value:"Souffle Datalog Solver",id:"souffle-datalog-solver",level:2},{value:"Dataflow Analysis in Misti",id:"dataflow-analysis-in-misti",level:2},{value:"References",id:"references",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"design-overview",children:"Design Overview"}),"\n",(0,t.jsx)(i.h2,{id:"static-analysis",children:"Static Analysis"}),"\n",(0,t.jsx)(i.p,{children:"Misti is a static analyzer, a tool that examines code without executing it, identifying potential errors, security vulnerabilities, and code quality issues."}),"\n",(0,t.jsx)(i.h2,{id:"souffle-datalog-solver",children:"Souffle Datalog Solver"}),"\n",(0,t.jsxs)(i.p,{children:["Misti leverages the ",(0,t.jsx)(i.a,{href:"https://souffle-lang.github.io",children:"Souffle Datalog solver"}),", an industry-grade and highly efficient Datalog solver designed specifically for program analysis. Souffle provides native parallel execution and is extremely fast, making it an ideal choice for analyzing complex codebases."]}),"\n",(0,t.jsx)(i.h2,{id:"dataflow-analysis-in-misti",children:"Dataflow Analysis in Misti"}),"\n",(0,t.jsx)(i.p,{children:"Misti offers an interface to describe classic dataflow problems. It includes a lattice interface and provides a mechanism to solve these problems using the worklist algorithm. This allows for efficient and accurate analysis of data flow within the code."}),"\n",(0,t.jsx)(i.h2,{id:"references",children:"References"}),"\n",(0,t.jsx)(i.p,{children:"For those interested in learning more about static analysis and dataflow analysis, the following books are recommended:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:(0,t.jsx)(i.a,{href:"https://cs.au.dk/~amoeller/spa/spa.pdf",children:"Anders M\xf8ller and Michael I. Schwartzbach \u2013 Static Program Analysis"})}),"\n",(0,t.jsx)(i.li,{children:"Uday Khedker et al. \u2013 Data Flow Analysis: Theory and Practice"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"These resources provide a solid foundation in the theory and practice of static and dataflow analysis."})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var t=n(6540);const s={},a=t.createContext(s);function l(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);